#!/bin/sh

set -e

if [ "$(whoami)" = root ]; then
  # stop apport
  stop apport 2>/dev/null || true
  sed -i '/^enabled=/s/=.*/=0/' /etc/default/apport 2>/dev/null
  # don't change anything when runnning as nobody
  if [ -n "$SUDO_USER" ]; then
    if [ -n "$TMPDIR" ] && [ -d "$TMPDIR" ]; then
      chown -R $SUDO_USER $TMPDIR
    fi
    if [ -n "$ADTTMP" ] && [ -d "$ADTTMP" ]; then
      chown -R $SUDO_USER $ADTTMP
    fi
  fi
  su_user=${SUDO_USER:-nobody}
fi
# no root access needed after this point

if status apport | grep -q start; then
  echo >&2 "apport is running. needs to be disabled before running the tests"
  exit 1
fi

debian_dir=$(dirname $(dirname $0))

export LOCPATH=$(pwd)/locales
sh $debian_dir/locale-gen

export LANG=C
arch=$(dpkg --print-architecture)

TESTPYTHON="python2.7 -E -Wd -3 -tt /usr/lib/python2.7/test/regrtest.py"
TESTOPTS="-w -uall,-network,-urlfetch,-gui,-xpickle"
TESTEXCLUSIONS="-x"

# test_curses: error: copywin() returned ERR
TESTEXCLUSIONS="$TESTEXCLUSIONS test_curses"

# test_distutils: Issue 17752, many failures in installed location
TESTEXCLUSIONS="$TESTEXCLUSIONS test_distutils"

# test_gdb: not run for the optimized build
TESTEXCLUSIONS="$TESTEXCLUSIONS test_gdb"

# test_pydoc: Issue 17773, failing tests
TESTEXCLUSIONS="$TESTEXCLUSIONS test_pydoc"

# test_tools: not relevant for installed version
TESTEXCLUSIONS="$TESTEXCLUSIONS test_tools"

# test_zipfile: Issue 17753, requires write access to test and email.test
TESTEXCLUSIONS="$TESTEXCLUSIONS test_zipfile"

# test_subprocess: Issue 17757, two failing tests
TESTEXCLUSIONS="$TESTEXCLUSIONS test_subprocess"

# test_uuid: fails, but not on the buildd. need to investigate
TESTEXCLUSIONS="$TESTEXCLUSIONS test_uuid"

if [ "$su_user" = nobody ]; then
  log=/dev/null
  # test_site: Issue 17758, fails to create HOME
  TESTEXCLUSIONS="$TESTEXCLUSIONS test_site"
else
  log=testsuite.log
fi

# run some tests separately in it's own run. These succeed locally,
# but fail on the test setup.
SEPARATE_TESTS=
case "$arch" in
    amd64)
	;;
    i386)
	SEPARATE_TESTS="$SEPARATE_TESTS test_io"
	;;
esac

script=$debian_dir/script.py
if [ -f "$script" ]; then
  cmd1="python2.7 $script \"$log\" \"$TESTPYTHON $TESTOPTS $TESTEXCLUSIONS $SEPARATE_TESTS\""
  cmd2="python2.7 $script \"$log\" \"$TESTPYTHON $TESTOPTS $SEPARATE_TESTS\""
else
  cmd1="$TESTPYTHON $TESTOPTS $TESTEXCLUSIONS $SEPARATE_TESTS"
  cmd2="$TESTPYTHON $TESTOPTS $SEPARATE_TESTS"
fi

echo "Running the python testsuite with the standard interpreter:"
if [ "$(whoami)" = root ]; then
  echo "su -c $cmd1 $su_user"
  su -c "$cmd1" $su_user
  if [ -n "$SEPARATE_TESTS" ]; then
    echo "su -c $cmd2 $su_user"
    su -c "$cmd2" $su_user
  fi
else
  echo "$cmd1"
  eval $cmd1
  if [ -n "$SEPARATE_TESTS" ]; then
    echo "$cmd2"
    eval $cmd2
  fi
fi
