#!/bin/sh

set -e

if [ "$(whoami)" = root ]; then
  # stop apport
  stop apport 2>/dev/null || true
  sed -i '/^enabled=/s/=.*/=0/' /etc/default/apport 2>/dev/null
  # don't change anything when runnning as nobody
  if [ -n "$SUDO_USER" ]; then
    if [ -n "$TMPDIR" ] && [ -d "$TMPDIR" ]; then
      chown -R $SUDO_USER $TMPDIR
    fi
    if [ -n "$ADTTMP" ] && [ -d "$ADTTMP" ]; then
      chown -R $SUDO_USER $ADTTMP
    fi
  fi
  su_user=${SUDO_USER:-nobody}
fi
# no root access needed after this point

if status apport | grep -q start; then
  echo >&2 "apport is running. needs to be disabled before running the tests"
  exit 1
fi

debian_dir=$(dirname $(dirname $0))

export LOCPATH=$(pwd)/locales
sh $debian_dir/locale-gen

export LANG=C

TESTPYTHON="python2.7-dbg -E -Wd -3 -tt /usr/lib/python2.7/test/regrtest.py"
TESTOPTS="-w -uall,-network,-urlfetch,-gui,-xpickle"
TESTEXCLUSIONS=

# test_curses: error: copywin() returned ERR
TESTEXCLUSIONS="$TESTEXCLUSIONS test_curses"

# test_distutils: Issue 17752, many failures in installed location
TESTEXCLUSIONS="$TESTEXCLUSIONS test_distutils"

# test_pydoc: Issue 17773, failing tests
TESTEXCLUSIONS="$TESTEXCLUSIONS test_pydoc"

# test_tools: not relevant for installed version
TESTEXCLUSIONS="$TESTEXCLUSIONS test_tools"

# test_zipfile: Issue 17753, requires write access to test and email.test
TESTEXCLUSIONS="$TESTEXCLUSIONS test_zipfile"

# test_subprocess: Issue 17757, two failing tests
TESTEXCLUSIONS="$TESTEXCLUSIONS test_subprocess"

# test_uuid: fails, but not on the buildd. need to investigate
TESTEXCLUSIONS="$TESTEXCLUSIONS test_uuid"

if [ "$su_user" = nobody ]; then
  log=/dev/null
  # test_site: Issue 17758, fails to create HOME
  TESTEXCLUSIONS="$TESTEXCLUSIONS test_site"
else
  log=testsuite-dbg.log
fi

script=$debian_dir/script.py

echo "Running the failing tests with the standard interpreter:"
progressions=
for tst in $TESTEXCLUSIONS; do
  if [ -f "$script" ]; then
    cmd="python2.7 $script \"$log\" \"$TESTPYTHON $TESTOPTS $tst\""
  else
    cmd="$TESTPYTHON $TESTOPTS $tst"
  fi

  echo "Running $tst ..."
  if [ "$(whoami)" = root ]; then
    echo "su -c $cmd $su_user"
    if su -c "$cmd" $su_user; then
      progressions="$progressions $tst"
    else
      :
    fi
  else
    echo "$cmd"
    if eval $cmd; then
      progressions="$progressions $tst"
    else
      :
    fi
  fi
done

if [ -n "$progressions" ]; then
  echo "Tests run: $TESTEXCLUSIONS"
  echo "Progressions:$progressions"
fi

exit 0
