diff --git a/Modules/_hashopenssl.c b/Modules/_hashopenssl.c
index 7116eeb..4e21f3c 100644
--- a/Modules/_hashopenssl.c
+++ b/Modules/_hashopenssl.c
@@ -73,7 +73,6 @@ static PyTypeObject EVPtype;
     static EVP_MD_CTX CONST_new_ ## Name ## _ctx; \
     static EVP_MD_CTX *CONST_new_ ## Name ## _ctx_p = NULL;
 
-DEFINE_CONSTS_FOR_NEW(md5)
 DEFINE_CONSTS_FOR_NEW(sha1)
 #ifdef _OPENSSL_SUPPORTS_SHA2
 DEFINE_CONSTS_FOR_NEW(sha224)
@@ -333,7 +332,7 @@ EVP_tp_init(EVPobject *self, PyObject *args, PyObject *kwds)
     }
 
     digest = EVP_get_digestbyname(nameStr);
-    if (!digest) {
+    if (!digest || digest == EVP_md5()) {
         PyErr_SetString(PyExc_ValueError, "unknown hash function");
         PyBuffer_Release(&view);
         return -1;
@@ -426,7 +425,7 @@ EVPnew(PyObject *name_obj,
 {
     EVPobject *self;
 
-    if (!digest && !initial_ctx) {
+    if ((!digest || digest == EVP_md5()) && !initial_ctx) {
         PyErr_SetString(PyExc_ValueError, "unsupported hash type");
         return NULL;
     }
@@ -637,7 +636,7 @@ pbkdf2_hmac(PyObject *self, PyObject *args, PyObject *kwdict)
     }
 
     digest = EVP_get_digestbyname(name);
-    if (digest == NULL) {
+    if (digest == NULL || digest == EVP_md5()) {
         PyErr_SetString(PyExc_ValueError, "unsupported hash type");
         goto end;
     }
@@ -758,7 +757,6 @@ pbkdf2_hmac(PyObject *self, PyObject *args, PyObject *kwdict)
     } \
 } while (0);
 
-GEN_CONSTRUCTOR(md5)
 GEN_CONSTRUCTOR(sha1)
 #ifdef _OPENSSL_SUPPORTS_SHA2
 GEN_CONSTRUCTOR(sha224)
@@ -771,7 +769,6 @@ GEN_CONSTRUCTOR(sha512)
 
 static struct PyMethodDef EVP_functions[] = {
     {"new", (PyCFunction)EVP_new, METH_VARARGS|METH_KEYWORDS, EVP_new__doc__},
-    CONSTRUCTOR_METH_DEF(md5),
     CONSTRUCTOR_METH_DEF(sha1),
 #ifdef _OPENSSL_SUPPORTS_SHA2
     CONSTRUCTOR_METH_DEF(sha224),
@@ -815,7 +812,6 @@ init_hashlib(void)
 #endif
 
     /* these constants are used by the convenience constructors */
-    INIT_CONSTRUCTOR_CONSTANTS(md5);
     INIT_CONSTRUCTOR_CONSTANTS(sha1);
 #ifdef _OPENSSL_SUPPORTS_SHA2
     INIT_CONSTRUCTOR_CONSTANTS(sha224);
diff --git a/Lib/test/test_hashlib.py b/Lib/test/test_hashlib.py
index 3fc172f..437a5ec 100644
--- a/Lib/test/test_hashlib.py
+++ b/Lib/test/test_hashlib.py
@@ -73,7 +73,7 @@ class HashLibTestCase(unittest.TestCase):
         if _hashlib:
             # These two algorithms should always be present when this module
             # is compiled.  If not, something was compiled wrong.
-            assert hasattr(_hashlib, 'openssl_md5')
+            # assert hasattr(_hashlib, 'openssl_md5')
             assert hasattr(_hashlib, 'openssl_sha1')
             for algorithm, constructors in self.constructors_to_test.items():
                 constructor = getattr(_hashlib, 'openssl_'+algorithm, None)
